<?xml version="1.0" encoding="UTF-8"?>
<?xml-stylesheet href="urn:x-suse:xslt:profiling:docbook50-profile.xsl"
                 type="text/xml"
                 title="Profiling step"?>
<!DOCTYPE article
[
  <!ENTITY % entities SYSTEM "entity-decl.ent">
    %entities;
]>
<article xmlns="http://docbook.org/ns/docbook" xmlns:xi="http://www.w3.org/2001/XInclude" xmlns:xlink="http://www.w3.org/1999/xlink" version="5.0" xml:id="article-transactional-updates" xml:lang="en">
<title>&administration;</title>
<subtitle>&productname; &productnumber;</subtitle>
<info>
  <productnumber>&productnumber;</productnumber><productname>&productname;</productname>
  <date><?dbtimestamp format="B d, Y"?></date>
  <abstract>
   <para>
    This guide describes administration of &slem;. 
   </para>
  </abstract>
  <dm:docmanager xmlns:dm="urn:x-suse:ns:docmanager">
   <dm:bugtracker></dm:bugtracker>
   <dm:translation>yes</dm:translation>
  </dm:docmanager>
 </info>
 <section xml:id="sec-transactional-udate">
 <title>Transactional updates</title>
 <para>
 &slema; was designed to use the read-only root file system. So after the deployment is complete, you are not able to perform direct modifications to the root file system, e.g. by using <command>zypper</command>. The concept of transactional update has been implemented to enable you to modify and keep your system up to date.
 </para>
 <para>
 Transactional updates uses snapshots, ensure that the snapshots are enabled. For details about snapshots refer to <xref linkend="sec-snapshots"/>.
 </para>
 <para>
 Transactional updates key features are the following: 
 </para>
 <itemizedlist>
 <listitem>
 <para>
 they are atomic - the update is applied only if it completes successfully.
 </para>
 </listitem>
 <listitem>
 <para>
 changes are applied in a separate snapshot and thus they do not influence the running system.
 </para>
 </listitem>
 <listitem>
 <para>
 they provide easy rollback.
 </para>
 </listitem>
 </itemizedlist>
 
 <para>
 Each time you call the <command>transactional-update</command> to change your system&mdash;either to install a package, perform an update or apply a patch; hte following procedure takes place: 
 </para>
 <procedure>
 <title>Changing the root file system</title>
 <step>
 <para>
 A new read-only snapshot is created from your current root file system.
 </para>
 </step>
 <step>
 <para>
 The snapshot is switched to read-write.
 </para>
 </step>
 <step>
 <para>
 All changes are applied (update, patches or package installation).
 </para>
 </step>
 <step>
 <para>
 The snapshot is switched back to read-only.
 </para>
 </step>
 <step>
 <para>
 A new root file system snapshot is created and the snapshots is prepared to be applied after reboot.
 </para>
 </step>
 <step>
 <para>
 After rebooting the new root file system is used instead of the current root file system.
 </para>
 <note>
 <para>
 Bear in mind that without rebooting your system, the changes won't be applied.
 </para>
 </note>
 </step>
 </procedure>
 
 <para>
 In case you do not reboot your mahcine before performing further changes to the file system, the new snapshot are created always from the current root. You will end up with several parallel snapshots, each spanshots includes the particular change, but not changes from the other snapshots. After reboot, the last created snnapshot will be used as your current root file system and will not include changes done in the previous snapshots.
 </para>
 
 <section xml:id="sec-snapshots">
 <title>Snapshots</title>
 </section>
 
 <section xml:id="sec-command-list">
 <title><command>transactional-update</command> usage</title>
 </section>
 </section>
 
 <section xml:id="sec-health-checker">
 <title>Health checker</title>
 </section>
</article>
