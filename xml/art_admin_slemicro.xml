<?xml version="1.0" encoding="UTF-8"?>
<?xml-stylesheet href="urn:x-suse:xslt:profiling:docbook50-profile.xsl"
                 type="text/xml"
                 title="Profiling step"?>
<!DOCTYPE article
[
  <!ENTITY % entities SYSTEM "entity-decl.ent">
    %entities;
]>
<article xmlns="http://docbook.org/ns/docbook" xmlns:xi="http://www.w3.org/2001/XInclude" xmlns:xlink="http://www.w3.org/1999/xlink" version="5.0" xml:id="article-transactional-updates" xml:lang="en">
<title>&slem; Administration</title>
<subtitle>&productname; &productnumber;</subtitle>
<info>
  <productnumber>&productnumber;</productnumber><productname>&productname;</productname>
  <date><?dbtimestamp format="B d, Y"?></date>
  <abstract>
   <para>
    This guide describes administration of &slem;. 
   </para>
  </abstract>
  <dm:docmanager xmlns:dm="urn:x-suse:ns:docmanager">
   <dm:bugtracker></dm:bugtracker>
   <dm:translation>yes</dm:translation>
  </dm:docmanager>
 </info>
 <section xml:id="sec-transactional-udate">
 <title>Transactional updates</title>
 <para>
 &slema; was designed to use the read-only root file system. So after the deployment is complete, you are not able to perform direct modifications to the root file system, e.g. by using <command>zypper</command>. The concept of transactional update has been implemented to enable you to modify and keep your system up to date.
 </para>
 <para>
 Transactional updates uses snapshots, ensure that the snapshots are enabled. For details about snapshots refer to <xref linkend="sec-snapshots"/>.
 </para>
 <para>
 Transactional updates key features are the following: 
 </para>
 <itemizedlist>
 <listitem>
 <para>
 they are atomic - the update is applied only if it completes successfully.
 </para>
 </listitem>
 <listitem>
 <para>
 changes are applied in a separate snapshot and thus they do not influence the running system.
 </para>
 </listitem>
 <listitem>
 <para>
 they provide easy rollback.
 </para>
 </listitem>
 </itemizedlist>
 
 <para>
 Each time you call the <command>transactional-update</command> to change your system&mdash;either to install a package, perform an update or apply a patch; the following actions take place: 
 </para>
 <procedure>
 <title>Modifying the root file system</title>
 <step>
 <para>
 A new read-only snapshot is created from your current root file system.
 </para>
 </step>
 <step>
 <para>
 The snapshot is switched to the read-write mode.
 </para>
 </step>
 <step>
 <para>
 All changes are applied (update, patches or package installation).
 </para>
 </step>
 <step>
 <para>
 The snapshot is switched back to the read-only mode.
 </para>
 </step>
 <step>
 <para>
 A new root file system snapshot is created and the snapshots is prepared to be applied after reboot.
 </para>
 </step>
 <step>
 <para>
 After rebooting the new root file system is used instead of the current root file system.
 </para>
 <note>
 <para>
 Bear in mind that without rebooting your system, the changes won't be applied.
 </para>
 </note>
 </step>
 </procedure>
 
 <para>
 In case you do not reboot your machine before performing further changes to the file system, the new snapshot are created always from the current root. You will end up with several parallel snapshots, each spanshots includes the particular change, but not changes from the other snapshots. After reboot, the last created snnapshot will be used as your current root file system and will not include changes done in the previous snapshots.
 </para>
 
 <section xml:id="sec-snapshots">
 <title>Snapshots</title>
 <warning>
 <title>Snapshots are mandatory</title>
 <para>
 As snapshots are crucial for &slema; correct functioning, do not disable the feature and ensure that the root partition is big enough to store the snapshots.
 </para>
 </warning>
 <para>
 When a snapshot is created, both the snapshot and the original point to the same blocks in the file system. So, initially a snapshot does not occupy additional disk space. If data in the original file system is modified, changed data blocks are copied while the old data blocks are kept for the snapshot.
 </para>
 <para>
 Snapshots always reside on the same partition or subvolume on which the snapshot has been taken. It is not possible to store snapshots on a different partition or subvolume. As a result, partitions containing snapshots need to be larger than partitions not containing snapshots. The exact amount depends strongly on the number of snapshots you keep and the amount of data modifications. As a rule of thumb, give partitions twice as much space as you normally would. To prevent disks from running out of space, old snapshots are automatically cleaned up. 
 </para>
 
 
 <section xml:id="sec-exclude-directories">
 <title>Directories excluded from snapshots</title>
 <para>
 As some directories store user specific or volatile data, these directories are excluded from snapshots:
 </para>
 <variablelist>
 <varlistentry>
 <term><filename>/home</filename></term>
 <listitem>
 <para>
 Contains user's data. To avoid overwriting this data, this directory is excluded from snapshots.
 </para>
 </listitem>
 </varlistentry>
 <varlistentry>
 <term><filename>/root</filename></term>
 <listitem>
 <para>
 </para>
 </listitem>
 </varlistentry>
 <varlistentry>
 <term><filename>/opt</filename></term>
 <listitem>
 <para>
 Third-party products usually get installed to <filename>/opt</filename>. It is excluded to avoid uninstalling these applications on rollbacks.
 </para>
 </listitem>
 </varlistentry>
 <varlistentry>
 <term><filename>/srv</filename></term>
 <listitem>
 <para>
 Contains data for Web and FTP servers. It is excluded to avoid data loss on rollbacks.
 </para>
 </listitem>
 </varlistentry>
 <varlistentry>
 <term><filename>/usr/local</filename></term>
 <listitem>
 <para>
 This directory is used when manually installing software. It is excluded to avoid uninstalling these installations on rollbacks.
 </para>
 </listitem>
 </varlistentry>
 <varlistentry>
 <term><filename>/var</filename></term>
 <listitem>
 <para>
 This directory contains many variable files, including logs, temporary caches, third party products in <filename>/var/opt</filename>, and is the default location for virtual machine images and databases. Therefore this subvolume is created to exclude all of this variable data from snapshots and has Copy-On-Write disabled.
 </para>
 </listitem>
 </varlistentry>
 <varlistentry>
 <term>the architecture specific <filename>/boot/grub2</filename> directory</term>
 <listitem>
 <para>
 A rollback of the boot loader configuration is not supported. 
 </para>
 </listitem>
 </varlistentry>
 </variablelist>
 </section>
 
 <section xml:id="sec-snapshot-size">
 <title>Showing exclusive disk space used by snapshots</title>
 <para>
      Snapshots share data, for efficient use of storage space, so using ordinary
      commands like <command>du</command> and <command>df</command> won't measure
      used disk space accurately. When you want to free up disk space on Btrfs 
      with quotas enabled, you need to know how much exclusive disk space is 
      used by each snapshot, rather than shared space. The <command>btrfs</command> command provides a view of space used by 
    snapshots:
</para>
<screen>
&prompt.root;btrfs qgroup show -p /
qgroupid         rfer         excl parent  
--------         ----         ---- ------  
0/5          16.00KiB     16.00KiB ---     
[...]    
0/272         3.09GiB     14.23MiB 1/0     
0/273         3.11GiB    144.00KiB 1/0     
0/274         3.11GiB    112.00KiB 1/0     
0/275         3.11GiB    128.00KiB 1/0     
0/276         3.11GiB     80.00KiB 1/0     
0/277         3.11GiB    256.00KiB 1/0     
0/278         3.11GiB    112.00KiB 1/0     
0/279         3.12GiB     64.00KiB 1/0     
0/280         3.12GiB     16.00KiB 1/0     
1/0           3.33GiB    222.95MiB --- 
</screen>
<para>
    The <literal>qgroupid</literal> column displays the identification number for
    each subvolume, assigning a qgroup level/ID combination.
</para> 
<para>
    The <literal>rfer</literal> column displays the total amount of data 
    referred to in the subvolume.
</para>
<para>
    The <literal>excl</literal> column displays the exclusive data in each
    subvolume. 
</para>
<para>
    The <literal>parent</literal> column shows the parent qgroup of the subvolumes.
</para>
<para>    
    The final item, <literal>1/0</literal>, shows the totals for the parent 
    qgroup. In the above example, 222.95 MiB will be freed if all subvolumes
    are removed. Run the following command to see which snapshots are associated
    with each subvolume:
</para>
 </section>
 
 <section xml:id="sec-snapshot-cleanup">
 <title>Automatic snapshot clean-up</title>
 <para>
   Snapshots occupy disk space and over time the amount of disk space occupied
   by the snapshots may become large. To prevent disks from running out of
   space, &slema; offers algorithms to automatically delete old snapshots.
  </para>

  <para>
   In addition to that, you can optionally specify a disk space quota, defining
   the maximum amount of disk space the snapshots may occupy. It is also
   possible to automatically delete pre and post snapshots pairs that do not
   differ.
  </para>
  
  <para>
   The default setup (<literal>root</literal>) is configured to do clean-up
   for numbered snapshots and empty pre and post snapshot pairs. Quota support
   is enabled&mdash;snapshots may not occupy more than 50% of the available
   disk space of the root partition. Timeline snapshots are disabled by
   default, therefore the timeline clean-up algorithm is also disabled.
  </para>
 </section>
 
 </section>
 
 
 
 <section xml:id="sec-command-list">
 <title><command>transactional-update</command> usage</title>
 <para>
 </para>
 </section>
 
 <section xml:id="sec-rollback-procedure">
 <title>System rollback</title>
 <para>
 GRUB 2 enables to boot from btrfs snapshots and thus allows you to use any older functional snapshot in case the new snapshot is corrupted.
 </para>
 <para>
 When booting a snapshot, the parts of the file system included in the snapshot are mounted read-only; all other file systems and parts that are excluded from snapshots are mounted read-write and can be modified.
 </para>
 <tip>
   <title>Rolling back to a specific installation state</title>
   <para>
    An initial bootable
    snapshot is created at the end of the initial system installation. You can
    go back to that state at any time by booting this snapshot. The snapshot
    can be identified by the description <literal>after installation</literal>.
   </para>
   </tip>
   <para>
   Before a rollback is performed, a snapshot of the running file system is created. The description references the ID of the snapshot that was restored in the rollback.
   </para>
   <para>
    Snapshots created by rollbacks receive the value <literal>number</literal>
    for the <literal>Cleanup</literal> attribute. The rollback snapshots are
    therefore automatically deleted when the set number of snapshots is reached.
    If the snapshot contains important data, extract the data from the snapshot
    before it is removed.
   </para>
   <para>
   The following procedure describes how you can perform a rollback:
   </para>
   <procedure>
   <step>
   <para>
   Reboot your system and select <literal>Start bootloader from a read-only snapshot</literal>
   </para>
   </step>
   <step>
   <para>
   Choose a snapshot to boot. The snapshots are sorted according to the date of creation, the latest being the top one.
   </para>
   </step>
   <step>
   <para>
   Log in to your system and check whether everything works as expected. Bear in mind that the snapshot directories are read-only so you cannot write into them. Data written to directories excluded from the snapshots will stay untouched.
   </para>
   </step>
   <step>
   <para>
   If the snapshot you booted into is not suitable for rollback, reboot your system and choose nother one.
   </para>
   <para>
   If the snapshot is correct, you can perform rollback by running the following command:
   </para>
   <screen>
   transactional-update rollback
   </screen>
   <para>
   And reboot afterwards.
   </para>
   </step>
   </procedure>
 </section>
 
 </section>
 
 <section xml:id="sec-health-checker">
 <title>Health checker</title>
 <para>
 TBD
 </para>
 </section>
</article>
